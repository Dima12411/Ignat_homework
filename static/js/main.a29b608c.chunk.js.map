{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","img","src","alt","message_content","message_body","user_name","name","user_message","time_container","time","messageData","HW1","SuperButton","red","restProps","finalClassName","button","default","Affair","stylePriority","color","border","marginLeft","backgroundColor","affair","priority","flex","span","style","delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","f","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressCallback","inputClass","error2","value","onChange","onKeyPress","errorColor","GreetingContainer","users","addUserCallback","setName","setError","length","e","processingName","currentTarget","trim","alert","key","HW3","setUsers","addName","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a29b608c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__20Ysj\",\"avatar\":\"Message_avatar__2yvsH\",\"img\":\"Message_img__lHE6N\",\"message_content\":\"Message_message_content__UkE-_\",\"message_body\":\"Message_message_body__3Kk7D\",\"user_message\":\"Message_user_message__ra6dQ\",\"user_name\":\"Message_user_name__3CyN_\",\"time_container\":\"Message_time_container__YhqIi\",\"time\":\"Message_time__kQTr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"Affairs_flex__1Qre_\",\"delete\":\"Affairs_delete__3Z5Qd\",\"button\":\"Affairs_button__7gJ_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__SWHXT\",\"input\":\"SuperInputText_input__1dKPl\",\"errorInput\":\"SuperInputText_errorInput__2Kjh6\",\"error\":\"SuperInputText_error__2q3zH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1ndm_\",\"red\":\"SuperButton_red__14G5g\",\"active\":\"SuperButton_active__1-OcY\",\"button\":\"SuperButton_button__2MCvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uatbc\",\"error\":\"Greeting_error__1p_Av\",\"error2\":\"Greeting_error2__3KYNl\",\"errorColor\":\"Greeting_errorColor__1mKGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3xusK\",\"column\":\"HW4_column__2fUor\",\"testSpanError\":\"HW4_testSpanError__1bylQ\",\"disabled\":\"HW4_disabled__HJ25f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3GKGC\",\"spanClassName\":\"SuperCheckbox_spanClassName__2a_qO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1I6rA\"};","import React from 'react'\r\nimport MessageData from \"./HW1\"\r\nimport s from \"./Message.module.css\"\r\n\r\ntype messageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: messageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}><img className={s.img} src={props.avatar} alt=\"avatar\"/></div>\r\n            <div className={s.message_content}>\r\n                <div className={s.message_body}>\r\n                    <div className={s.user_name}>{props.name}</div>\r\n                    <div className={s.user_message}>{props.message}</div>\r\n                </div>\r\n                <div className={s.time_container}>\r\n                    <div className={s.time}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport s from \"./Message.module.css\"\r\n\r\nexport const messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Dima',\r\n    message: 'What did you do?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {findAllByDisplayValue} from \"@testing-library/react\";\r\nimport s from './Affairs.module.css'\r\nimport {AffairType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\r\n    const stylePriority = {\r\n        color: 'white',\r\n        border: '1px solid black',\r\n        marginLeft: '20px',\r\n        backgroundColor: props.affair.priority === 'low' ? 'green' : props.affair.priority === 'middle' ? 'orange' : 'red'\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                <div className={s.flex}>\r\n                    {props.affair.name}:\r\n                    <div className={s.span}>\r\n                        <span\r\n                        style={stylePriority}>\r\n                        {props.affair.priority}\r\n                    </span>\r\n                    </div>\r\n                    <div>\r\n                    {/*<button onClick={deleteCallback}>X</button>*/}\r\n                    <SuperButton className={s.delete}\r\n                        onClick={deleteCallback}>X</SuperButton>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairPriorityType, AffairType, filterAffairs, FilterType} from './HW2'\r\nimport s from '../h2/Affairs.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')}\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div className={s.button}>\r\n\r\n            {mappedAffairs}\r\n            <SuperButton onClick={setAll}>All</SuperButton>\r\n            <SuperButton onClick={setHigh}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow}>Low</SuperButton>\r\n            {/*<button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n\r\nexport const defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'REACT', priority: 'high'},\r\n    {_id: 2, name: 'ANIME', priority: 'low'},\r\n    {_id: 3, name: 'GAMES', priority: 'low'},\r\n    {_id: 4, name: 'WORK', priority: 'high'},\r\n    {_id: 5, name: 'HTML & CSS', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter((s)=> s.priority === filter)\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): AffairType[] => {\r\n    return affairs.filter(f => f._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: (name: string) => void\r\n    error: string\r\n    totalUsers: number\r\n    onKeyPressCallback: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressCallback} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = (error) ? s.error : s.error2\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} onKeyPress={onKeyPressCallback} className={inputClass}/>\r\n            {/*<button onClick={()=>addUser(name)}>add</button>*/}\r\n            <SuperButton onClick={()=>addUser(name)}>add</SuperButton>\r\n            <span>{totalUsers}</span>\r\n            <div className={s.errorColor}><span>{error}</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === \"Enter\") {\r\n            addUserCallback(name)\r\n            setName(\"\")\r\n\r\n        }\r\n    }\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let processingName = e.currentTarget.value.trim()\r\n        if (processingName !== '') {\r\n            setName(processingName)\r\n            setError('')\r\n        } else {\r\n            setName('')\r\n            setError('name is require')\r\n        }\r\n    }\r\n\r\n\r\n    const addUser = () => {\r\n        alert(`Hello ${name} !`)\r\n        addUserCallback(name)\r\n        setName(\"\")\r\n    }\r\n\r\n    let totalUsers = users.length\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressCallback={onKeyPressCallback}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let newName = {_id: v1(), name: name}\r\n        let addName = [newName, ... users]\r\n        setUsers(addName)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        return onChangeChecked ? onChangeChecked(e.currentTarget.checked) : \"\"\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    //spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    Default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    Delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton className={s.disabled} disabled>\r\n                    Disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    Notice {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            {/*<HashRouter>*/}\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            {/*</HashRouter>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}