{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","img","src","alt","message_content","message_body","user_name","name","user_message","time_container","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","flex","affair","priority","priority_green","priority_yellow","priority_red","delete","button_delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","button","button_container","button_all","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","f","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressCallback","inputClass","error2","value","onChange","onKeyPress","errorColor","GreetingContainer","users","addUserCallback","setName","setError","length","e","processingName","currentTarget","trim","alert","key","HW3","setUsers","addName","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","SuperRadio","mappedOptions","o","i","arr","HW7","Junior","JuniorPlus","PATH","RoutesPage","path","element","Header","container","navigation","navlink","to","HW5","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bc5dfc8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"Affairs_flex__1Qre_\",\"priority_red\":\"Affairs_priority_red__2gV_i\",\"priority_yellow\":\"Affairs_priority_yellow__10p5K\",\"priority_green\":\"Affairs_priority_green__F6EhP\",\"delete\":\"Affairs_delete__3Z5Qd\",\"button_container\":\"Affairs_button_container__346TM\",\"button\":\"Affairs_button__7gJ_P\",\"button_delete\":\"Affairs_button_delete__3AHXL\",\"button_all\":\"Affairs_button_all__1vgfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__20Ysj\",\"avatar\":\"Message_avatar__2yvsH\",\"img\":\"Message_img__lHE6N\",\"message_content\":\"Message_message_content__UkE-_\",\"message_body\":\"Message_message_body__3Kk7D\",\"user_message\":\"Message_user_message__ra6dQ\",\"user_name\":\"Message_user_name__3CyN_\",\"time_container\":\"Message_time_container__YhqIi\",\"time\":\"Message_time__kQTr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__V6uy4\",\"navigation\":\"Header_navigation__3z4hi\",\"navlink\":\"Header_navlink__s4ciy\",\"active\":\"Header_active__2-1vC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__SWHXT\",\"errorInput\":\"SuperInputText_errorInput__2Kjh6\",\"error\":\"SuperInputText_error__2q3zH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uatbc\",\"error\":\"Greeting_error__1p_Av\",\"error2\":\"Greeting_error2__3KYNl\",\"errorColor\":\"Greeting_errorColor__1mKGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3xusK\",\"column\":\"HW4_column__2fUor\",\"testSpanError\":\"HW4_testSpanError__1bylQ\",\"disabled\":\"HW4_disabled__HJ25f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1ndm_\",\"red\":\"SuperButton_red__14G5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3GKGC\",\"spanClassName\":\"SuperCheckbox_spanClassName__2a_qO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1I6rA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__1kF-O\"};","import React from 'react'\r\nimport MessageData from \"./HW1\"\r\nimport s from \"./Message.module.css\"\r\n\r\ntype messageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: messageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}><img className={s.img} src={props.avatar} alt=\"avatar\"/></div>\r\n            <div className={s.message_content}>\r\n                <div className={s.message_body}>\r\n                    <div className={s.user_name}>{props.name}</div>\r\n                    <div className={s.user_message}>{props.message}</div>\r\n                </div>\r\n                <div className={s.time_container}>\r\n                    <div className={s.time}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport s from \"./Message.module.css\"\r\n\r\nexport const messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Dima',\r\n    message: 'What did you do?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.default} ${red && s.red} ${className}`\r\n\r\n    return (\r\n                <button\r\n                    className={finalClassName}\r\n                    {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n                />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {findAllByDisplayValue} from \"@testing-library/react\";\r\nimport s from './Affairs.module.css'\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                <div className={s.flex}>\r\n                    <div className={s.name}>\r\n                        {props.affair.name}:\r\n                    </div>\r\n                    <div className={props.affair.priority === 'low' ? s.priority_green : props.affair.priority === 'middle' ? s.priority_yellow : s.priority_red}>\r\n                        {props.affair.priority}\r\n\r\n                    </div>\r\n                    <div className={s.delete}>\r\n                        {/*<button onClick={deleteCallback}>X</button>*/}\r\n                        <SuperButton className={s.button_delete} onClick={deleteCallback}>X</SuperButton>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairPriorityType, AffairType, filterAffairs, FilterType} from './HW2'\r\nimport s from '../h2/Affairs.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    }\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div className={s.button}>\r\n\r\n            {mappedAffairs}\r\n            <div className={s.button_container}>\r\n                <div className={s.button}><SuperButton className={s.button_all} onClick={setAll}>All</SuperButton></div>\r\n                <div className={s.button}><SuperButton onClick={setHigh}>High</SuperButton></div>\r\n                <div className={s.button}><SuperButton onClick={setMiddle}>Middle</SuperButton></div>\r\n                <div className={s.button}><SuperButton onClick={setLow}>Low</SuperButton></div>\r\n            </div>\r\n            {/*<button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n\r\nexport const defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'REACT', priority: 'high'},\r\n    {_id: 2, name: 'ANIME', priority: 'low'},\r\n    {_id: 3, name: 'GAMES', priority: 'low'},\r\n    {_id: 4, name: 'WORK', priority: 'high'},\r\n    {_id: 5, name: 'HTML & CSS', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter((s)=> s.priority === filter)\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): AffairType[] => {\r\n    return affairs.filter(f => f._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: (name: string) => void\r\n    error: string\r\n    totalUsers: number\r\n    onKeyPressCallback: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressCallback} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = (error) ? s.error : s.error2\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} onKeyPress={onKeyPressCallback} className={inputClass}/>\r\n            {/*<button onClick={()=>addUser(name)}>add</button>*/}\r\n            <SuperButton onClick={()=>addUser(name)}>add</SuperButton>\r\n            <span>{totalUsers}</span>\r\n            <div className={s.errorColor}><span>{error}</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === \"Enter\") {\r\n            addUserCallback(name)\r\n            setName(\"\")\r\n\r\n        }\r\n    }\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let processingName = e.currentTarget.value.trim()\r\n        if (processingName !== '') {\r\n            setName(processingName)\r\n            setError('')\r\n        } else {\r\n            setName('')\r\n            setError('name is require')\r\n        }\r\n    }\r\n\r\n\r\n    const addUser = () => {\r\n        if (name.trim() !== '') {\r\n            addUserCallback(name)\r\n            alert(`Hello ${name} !`)\r\n        } else {\r\n            setError('name is should be correct')\r\n        }\r\n        setName(\"\")\r\n    }\r\n\r\n    let totalUsers = users.length\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressCallback={onKeyPressCallback}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let newName = {_id: v1(), name: name}\r\n        let addName = [newName, ... users]\r\n        setUsers(addName)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        return onChangeChecked ? onChangeChecked(e.currentTarget.checked) : \"\"\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'name is required'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    //spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    Default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    Delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton className={s.disabled} disabled>\r\n                    Disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    Notice {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\n\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior;","import React from \"react\";\r\n\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus;","import React from 'react'\r\nimport {Route, Routes} from 'react-router-dom'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n    // add paths\r\n}\r\n\r\nfunction RoutesPage() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Routes>\r\n                    <Route path={'/*'} element={<Error404/>} />\r\n                    <Route path={'/'} element={<PreJunior/>} />\r\n                    <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>} />\r\n                    <Route path={PATH.JUNIOR} element={<Junior/>} />\r\n                    <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>} />\r\n                   {/* <Route path={'/*'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                    <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                    // add routes\r\n\r\n                    у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n                    <Route render={() => <Error404/>}/>*/}\r\n                </Routes>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoutesPage\r\n","import React, {useState} from 'react'\r\nimport {PATH} from \"./Routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\n\r\n\r\nfunction Header() {\r\n   /* const [collapsed, setCollapsed] = useState<boolean>(false)\r\n    const changeCollapsed = () => {\r\n        setCollapsed(!collapsed)\r\n    }*/\r\n    return (\r\n        <nav className={s.container}>\r\n           {/* <div className={s.menu}>\r\n                    <span className={s.href}\r\n                          onClick={changeCollapsed}\r\n                    >Skills</span>\r\n            </div>\r\n            {collapsed &&*/}\r\n                <div className={s.navigation}>\r\n                    <NavLink className={s.navlink} to={PATH.PRE_JUNIOR}>PreJunior &nbsp;</NavLink>\r\n                    <NavLink className={s.navlink} to={PATH.JUNIOR}>Junior &nbsp;</NavLink>\r\n                    <NavLink className={s.navlink} to={PATH.JUNIOR_PLUS}>JuniorPlus &nbsp;</NavLink>\r\n                    <span>&nbsp; &gt;&nbsp; </span>\r\n                </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport RoutesPage from \"./Routes\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <RoutesPage/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n           {/* <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}